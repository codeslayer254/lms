/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import library.dao.BookDao;
import library.model.Book;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.paint.Color;
import javax.swing.JOptionPane;
import static library.AdminPanel.login;
import static library.Librarian.allLibrarians;
import library.dao.LibrarianDao;
import library.model.TransactionHistory;
import library.model.Users;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author User
 */
public class LibrarianPanel extends javax.swing.JFrame {

    /**
     * Creates new form Research
     */
    private static Connection conn = null;
    private static ResultSet rs = null;
    private static PreparedStatement pst = null;
    String fileName = null;
    int s = 0;
    long bookId = 0;
    private Users currentUser;
    private Book currentBook;

    private TransactionHistory transactionHistory;

    public LibrarianPanel() {
        initComponents();

        usernameLabel.setText(
                login.libUser.getFirstName()
                + " " + login.libUser.getLastName());
        conn = sqlconnect.ConnectDb();

        getAccountHistory();
        loadLibrarian();

        btnCheckIn.setEnabled(false);
        btnCheckOut.setEnabled(false);
        //btnUpdateAccount.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        copyrightLabel = new javax.swing.JLabel();
        welcomelbl = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        javax.swing.JPanel bookPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblIsbn = new javax.swing.JLabel();
        passwordTF = new javax.swing.JTextField();
        fnameTF = new javax.swing.JTextField();
        emailTF = new javax.swing.JTextField();
        btnUpdateAccount = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lnameTF = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        usernameTF = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnCheckOut = new javax.swing.JButton();
        javax.swing.JButton searchBtn = new javax.swing.JButton();
        borrowBookTitle = new javax.swing.JTextField();
        bookIsbnTF = new javax.swing.JTextField();
        btnCheckIn = new javax.swing.JButton();
        currentBookStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        menuBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Knowlegica LMS | Librarian");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        copyrightLabel.setBackground(new java.awt.Color(255, 255, 255));
        copyrightLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        copyrightLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/copyrightsymbol.png"))); // NOI18N
        copyrightLabel.setText("2016 Knowlegica. All Rights Reserved.");
        copyrightLabel.setToolTipText("");
        getContentPane().add(copyrightLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 640, 240, 20));

        welcomelbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        welcomelbl.setText("Welcome, ");
        getContentPane().add(welcomelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 70, -1));

        usernameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(usernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 170, 20));

        title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        title.setText("KNOWLEGICA LMS : Librarian Panel");
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, -1, -1));

        bookPanel.setBackground(new java.awt.Color(204, 204, 204));
        bookPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("My Account");
        bookPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, -1, -1));

        lblName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblName.setText("Firstname :");
        bookPanel.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, 30));

        lblEmail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblEmail.setText("Email :");
        lblEmail.setToolTipText("");
        bookPanel.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        lblIsbn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblIsbn.setText("Password :");
        bookPanel.add(lblIsbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));
        bookPanel.add(passwordTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 250, 30));
        bookPanel.add(fnameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 250, 30));
        bookPanel.add(emailTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 250, 30));

        btnUpdateAccount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdateAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/Update.png"))); // NOI18N
        btnUpdateAccount.setText("UPDATE ACCOUNT");
        btnUpdateAccount.setEnabled(false);
        btnUpdateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAccountActionPerformed(evt);
            }
        });
        bookPanel.add(btnUpdateAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 200, 50));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Lastname :");
        bookPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, 30));
        bookPanel.add(lnameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 250, 30));

        lblUsername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUsername.setText("Username :");
        bookPanel.add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));
        bookPanel.add(usernameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 250, -1));

        getContentPane().add(bookPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 360, 290));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("ISBN :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Book Title :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Book Status :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 30));

        btnCheckOut.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCheckOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/borrow.png"))); // NOI18N
        btnCheckOut.setText("CHECK OUT");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });
        jPanel1.add(btnCheckOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 150, 40));

        searchBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/2_006.png"))); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        jPanel1.add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 110, 30));
        jPanel1.add(borrowBookTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 260, 30));
        jPanel1.add(bookIsbnTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 170, 30));

        btnCheckIn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCheckIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/return.png"))); // NOI18N
        btnCheckIn.setLabel("CHECK IN");
        btnCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckInActionPerformed(evt);
            }
        });
        jPanel1.add(btnCheckIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 140, 40));

        currentBookStatus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(currentBookStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 210, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 360, 260));

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        historyTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(historyTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, 830, 270));

        menuBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        menuBtn.setText("BACK");
        menuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBtnActionPerformed(evt);
            }
        });
        getContentPane().add(menuBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 10, 110, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("My History");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 70, 110, 30));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/plain-blue-background.jpg"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1240, 670));

        setSize(new java.awt.Dimension(1267, 717));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBtnActionPerformed

        LibrarianPanel menu = new LibrarianPanel();
        menu.setVisible(true);
        dispose();
    }//GEN-LAST:event_menuBtnActionPerformed


    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed

        BookDao bookDao = new BookDao();
        currentBook.setStatus("BORROWED");
        currentBook.setLibarianID(currentUser.getId());

        int reply = JOptionPane.showConfirmDialog(null, "Confirm Checking Out Book Status");
        if (reply == JOptionPane.YES_OPTION) {
            try {
                bookDao.checkOut(currentBook);
                btnCheckOut.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Book Status Updated Successfully");

            } catch (Exception ex) {
                Logger.getLogger(LibrarianPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "You cancelled Checking Out book status");
        }

        getAccountHistory();
    }//GEN-LAST:event_btnCheckOutActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed

        if (bookIsbnTF.getText() == null || bookIsbnTF.getText() == "") {

            JOptionPane.showMessageDialog(null, " Please Enter Book ISBN", "Inavlid ISBN", JOptionPane.ERROR_MESSAGE);
            bookIsbnTF.setText("");
            bookIsbnTF.requestFocus(true);

        } else {

            BookDao bookDao = new BookDao();
            try {
                currentBook = bookDao.findBookByISBN(bookIsbnTF.getText().toString());

                if (currentBook != null) {
                    borrowBookTitle.setText(currentBook.getTitle());
                    currentBook.setLibarianID(currentUser.getId());

                    if (currentBook.getStatus().equalsIgnoreCase("AVAILABLE")) {

                        btnCheckOut.setEnabled(true);
                        currentBookStatus.setForeground(java.awt.Color.GREEN);
                    } else {

                        btnCheckIn.setEnabled(true);
                        currentBookStatus.setForeground(java.awt.Color.RED);
                    }

                    currentBookStatus.setText(currentBook.getStatus());
                } else {
                    JOptionPane.showMessageDialog(null, "No Book was found", "Book Not Found", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception ex) {
                Logger.getLogger(LibrarianPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_searchBtnActionPerformed

    private void btnUpdateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAccountActionPerformed

        LibrarianDao librarianDao = new LibrarianDao();
        Users user = new Users();
        user.setId(currentUser.getId());
        user.setFirstName(fnameTF.getText());
        user.setLastName(lnameTF.getText());
        user.setUsername(usernameTF.getText());
        user.setPassword(passwordTF.getText());
        user.setEmail(emailTF.getText());

        int reply = JOptionPane.showConfirmDialog(null, "Confirm Updating Your Account: \n" + usernameTF.getText());
        if (reply == JOptionPane.YES_OPTION) {
            try {
                librarianDao.update(user);
                JOptionPane.showMessageDialog(null, "My Account updated Successfully");

                //Clear the input fields
                usernameTF.setText("");
                passwordTF.setText("");
                fnameTF.setText("");
                lnameTF.setText("");
                emailTF.setText("");

                btnUpdateAccount.setEnabled(false);
            } catch (Exception ex) {
                Logger.getLogger(Staff.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "You cancelled updating account");
        }

        getAccountHistory();
        allLibrarians();
    }//GEN-LAST:event_btnUpdateAccountActionPerformed

    private void btnCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckInActionPerformed
        // TODO add your handling code here:

        BookDao bookDao = new BookDao();

        if (currentBook.equals(null)) {
            JOptionPane.showMessageDialog(null, " Book Not Found", "Inavlid ISBN", JOptionPane.ERROR_MESSAGE);
        } else {

        }
        currentBook.setStatus("AVAILABLE");

        int reply = JOptionPane.showConfirmDialog(null, "Confirm Checking In Book in Library");
        if (reply == JOptionPane.YES_OPTION) {
            try {
                bookDao.checkIn(currentBook);
                btnCheckIn.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Book Checked In Successfully in Library");

            } catch (Exception ex) {
                Logger.getLogger(LibrarianPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "You cancelled Checking In Book");
        }
        getAccountHistory();
    }//GEN-LAST:event_btnCheckInActionPerformed

    public void loadLibrarian() {

        LibrarianDao librainDao = new LibrarianDao();
        try {
            currentUser = librainDao.findLibrarianById(login.libUser.getId());
        } catch (Exception ex) {
            Logger.getLogger(LibrarianPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        fnameTF.setText(currentUser.getFirstName());
        lnameTF.setText(currentUser.getFirstName());
        emailTF.setText(currentUser.getEmail());
        passwordTF.setText(currentUser.getPassword());

        btnUpdateAccount.setEnabled(true);

    }

    public static void getAccountHistory() {

        String sql = "SELECT * FROM TRANSACTION_HISTORY WHERE LIBRARIAN_ID = '" + login.libUser.getId() + "'";

        try {
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            historyTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibrarianPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibrarianPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibrarianPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibrarianPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LibrarianPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bookIsbnTF;
    private javax.swing.JTextField borrowBookTitle;
    private javax.swing.JButton btnCheckIn;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnUpdateAccount;
    private javax.swing.JLabel copyrightLabel;
    private javax.swing.JLabel currentBookStatus;
    private javax.swing.JTextField emailTF;
    private javax.swing.JTextField fnameTF;
    private static javax.swing.JTable historyTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblIsbn;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField lnameTF;
    private javax.swing.JButton menuBtn;
    private javax.swing.JTextField passwordTF;
    private javax.swing.JLabel title;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTF;
    private javax.swing.JLabel welcomelbl;
    // End of variables declaration//GEN-END:variables

}
