/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import library.dao.LibrarianDao;
import library.model.Users;
import java.awt.HeadlessException;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author User
 */
public class Librarian extends javax.swing.JFrame {

    /**
     * Creates new form Research
     */
    private static Connection conn = null;
    private static ResultSet rs = null;
    private static PreparedStatement pst = null;

    private Users currentLibrarian;
    private Pattern mailPattern;
    private ImageIcon format = null;
    String fileName = null;
    int s = 0;
    byte[] personImage = null;
    private static final String EMAIL_PATTERN
            = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
            + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
    //public static final byte[] SPACE_KB = 1024;

    public Librarian() {
        initComponents();
        conn = sqlconnect.ConnectDb();
        allLibrarians();
        mailPattern = Pattern.compile(EMAIL_PATTERN);

        startAdd.setEnabled(true);
        updateBtn.setEnabled(false);
        delBtn.setEnabled(false);
        saveBtn.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        copyrightLabel = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        candPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        firstnameTxt = new javax.swing.JTextField();
        lastnameTxt = new javax.swing.JTextField();
        userNameTxt = new javax.swing.JTextField();
        emailTxt = new javax.swing.JTextField();
        saveBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        delBtn = new javax.swing.JButton();
        passwordTF = new javax.swing.JPasswordField();
        startAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        librarianTable = new javax.swing.JTable();
        menuBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Knowlegica LMS | Members");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        copyrightLabel.setBackground(new java.awt.Color(255, 255, 255));
        copyrightLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        copyrightLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/copyrightsymbol.png"))); // NOI18N
        copyrightLabel.setText("2016 Knowlegica. All Rights Reserved.");
        copyrightLabel.setToolTipText("");
        getContentPane().add(copyrightLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 540, 240, 20));

        title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        title.setText("KNOWLEGICA LMS: Library Members");
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));

        candPanel.setBackground(new java.awt.Color(204, 204, 204));
        candPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add/Update Librarian", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        candPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("First Name :");
        candPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Last Name :");
        candPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Usename :");
        candPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Password :");
        jLabel5.setToolTipText("");
        candPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("E-mail :");
        candPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));
        candPanel.add(firstnameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 248, -1));
        candPanel.add(lastnameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 248, -1));
        candPanel.add(userNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 245, -1));
        candPanel.add(emailTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 245, -1));

        saveBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/Save-icon.png"))); // NOI18N
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        candPanel.add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 100, 30));

        updateBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/Update.png"))); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        candPanel.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, 150, 40));

        delBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        delBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/delete.png"))); // NOI18N
        delBtn.setText("Delete");
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });
        candPanel.add(delBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 130, 170, 40));
        candPanel.add(passwordTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, 240, -1));

        startAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        startAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/user-new.png"))); // NOI18N
        startAdd.setText("Add New");
        startAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startAddActionPerformed(evt);
            }
        });
        candPanel.add(startAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 130, 30));

        getContentPane().add(candPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 71, 1010, 190));

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        librarianTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        librarianTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                librarianTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(librarianTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 1000, 200));

        menuBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        menuBtn.setText("BACK");
        menuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBtnActionPerformed(evt);
            }
        });
        getContentPane().add(menuBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 120, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/images/plain-blue-background.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, 1030, 570));

        setSize(new java.awt.Dimension(1058, 598));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed

        if (fieldsAreValid()) {
            LibrarianDao librarian = new LibrarianDao();
            Users user = new Users();

            user.setUsername(userNameTxt.getText());
            user.setPassword(passwordTF.getText());
            user.setFirstName(firstnameTxt.getText());
            user.setLastName(lastnameTxt.getText());
            user.setEmail(emailTxt.getText());
            user.setRole("LIBRARIAN");

            Matcher mailMatcher = mailPattern.matcher(emailTxt.getText().toString().toUpperCase());

            if (mailMatcher.matches()) {

                Users voter;
                try {
                    voter = librarian.findLibrarianByUserName(userNameTxt.getText().toUpperCase());

                    if (voter != null) {

                        JOptionPane.showMessageDialog(null, " Librarian with Username already registered", "Librarian Exists", JOptionPane.ERROR_MESSAGE);
                        userNameTxt.setText("");
                        userNameTxt.requestFocus(true);

                    } else {
                        int reply = JOptionPane.showConfirmDialog(null, "Confirm Adding Librarian: \n" + firstnameTxt.getText());
                        if (reply == JOptionPane.YES_OPTION) {
                            try {

                                librarian.save(user);
                                JOptionPane.showMessageDialog(null, "Librarian added Successfully");

                                //Clear the input fields
                                userNameTxt.setText("");
                                passwordTF.setText("");
                                firstnameTxt.setText("");
                                lastnameTxt.setText("");
                                emailTxt.setText("");

                            } catch (SQLException | HeadlessException ex) {
                                Logger.getLogger(Staff.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "You cancelled adding Librarian");
                        }
                    }
                } catch (Exception ex) {
                    Logger.getLogger(Librarian.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {

                JOptionPane.showMessageDialog(null, "Please enter valid mail format!", "Invalid Mail Format", JOptionPane.ERROR_MESSAGE);
                emailTxt.setText("");
                emailTxt.requestFocus(true);
            }
            allLibrarians();
        } else {

            JOptionPane.showMessageDialog(null, "Please fill missing fields", "Missing Fieds", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_saveBtnActionPerformed

    private boolean fieldsAreValid() {

        if (userNameTxt.getText().equals(null) || userNameTxt.getText().equals("")
                || passwordTF.getText().equals(null) || passwordTF.getText().equals("")
                || firstnameTxt.getText().equals(null) || firstnameTxt.getText().equals("")
                || emailTxt.getText().equals("") || emailTxt.getText().equals("")) {
            return false;
        } else {
            return true;
        }

    }
    private void menuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBtnActionPerformed

        AdminPanel menu = new AdminPanel();
        menu.setVisible(true);
        dispose();
    }//GEN-LAST:event_menuBtnActionPerformed

    private void librarianTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_librarianTableMouseClicked

        LibrarianDao librarianDao = new LibrarianDao();

        int row = librarianTable.getSelectedRow();
        String librarianId = (librarianTable.getModel().getValueAt(row, 0).toString());

        try {
            currentLibrarian = librarianDao.findLibrarianById(Long.parseLong(librarianId));

            firstnameTxt.setText(currentLibrarian.getFirstName());
            lastnameTxt.setText(currentLibrarian.getLastName());
            userNameTxt.setText(currentLibrarian.getUsername());
            emailTxt.setText(currentLibrarian.getEmail());
            passwordTF.setText(currentLibrarian.getPassword());

            updateBtn.setEnabled(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            Logger.getLogger(Librarian.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_librarianTableMouseClicked

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed

        LibrarianDao librarian = new LibrarianDao();
        Users user = new Users();
        user.setId(currentLibrarian.getId());
        user.setFirstName(firstnameTxt.getText());
        user.setLastName(lastnameTxt.getText());
        user.setUsername(userNameTxt.getText());
        user.setPassword(passwordTF.getText());
        user.setEmail(emailTxt.getText());

        int reply = JOptionPane.showConfirmDialog(null, "Confirm Updating Librarian: \n" + firstnameTxt.getText());
        if (reply == JOptionPane.YES_OPTION) {
            try {
                librarian.update(user);
                JOptionPane.showMessageDialog(null, "Librarian updated Successfully");

                //Clear the input fields
                userNameTxt.setText("");
                passwordTF.setText("");
                firstnameTxt.setText("");
                lastnameTxt.setText("");
                emailTxt.setText("");

                updateBtn.setEnabled(false);
            } catch (Exception ex) {
                Logger.getLogger(Staff.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "You cancelled updating candidate");
        }
        allLibrarians();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed

        LibrarianDao librarian = new LibrarianDao();
        Users user = new Users();

        user.setId(currentLibrarian.getId());
        user.setFirstName(firstnameTxt.getText());
        user.setLastName(lastnameTxt.getText());
        user.setUsername(userNameTxt.getText());
        user.setPassword(passwordTF.getSelectedText());
        user.setEmail(emailTxt.getText());

        int reply = JOptionPane.showConfirmDialog(null, "Confirm Deleting Librarian: \n" + firstnameTxt.getText());
        if (reply == JOptionPane.YES_OPTION) {
            try {
                librarian.delete(user);
                JOptionPane.showMessageDialog(null, "Librarian deleted Successfully");

                //Clear the input fields
                user.setFirstName("");
                user.setLastName("");
                user.setUsername("");
                user.setPassword("");
                user.setEmail("");

            } catch (Exception ex) {
                Logger.getLogger(Staff.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "You cancelled deleting Librarian");
        }
        allLibrarians();
    }//GEN-LAST:event_delBtnActionPerformed

    private void startAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startAddActionPerformed
        // TODO add your handling code here:

        clearComponents();
        saveBtn.setEnabled(true);
    }//GEN-LAST:event_startAddActionPerformed

    private void clearComponents() {

        firstnameTxt.setText("");
        lastnameTxt.setText("");
        userNameTxt.setText("");
        passwordTF.setText("");
        emailTxt.setText("");

        saveBtn.setEnabled(true);
    }

    public static void allLibrarians() {
        String sql = "SELECT * FROM USERS WHERE ROLE = 'LIBRARIAN'";
        try {
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            librarianTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Librarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Librarian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel candPanel;
    private javax.swing.JLabel copyrightLabel;
    private javax.swing.JButton delBtn;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JTextField firstnameTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastnameTxt;
    private static javax.swing.JTable librarianTable;
    private javax.swing.JButton menuBtn;
    private javax.swing.JPasswordField passwordTF;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton startAdd;
    private javax.swing.JLabel title;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField userNameTxt;
    // End of variables declaration//GEN-END:variables
}
